name: 执行专家命中汇总生成 & 同步远程

on:
  workflow_dispatch:
    inputs:
      LOTTERY:
        description: "彩票类型"
        required: true
        default: "全部"
        type: choice
        options:
          - 全部
          - 福彩3D
          - 排列3
          - 排列5
          - 快乐8
          - 双色球
          - 大乐透

      MODE:
        description: "执行模式"
        required: true
        default: "不启用"
        type: choice
        options:
          - All
          - Today
          - 不启用

      ISSUE:
        description: "期号（可选）"
        required: false


  # ✅ 每天定时增量
  schedule:
    - cron: "50 14 * * *"

jobs:
  hit-stat-job:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Debug Timezone Info
        run: |
          echo "==== 🕒 当前时间检查 ===="
          echo "✅ 当前 UTC 时间: $(date -u '+%Y-%m-%d %H:%M:%S')"
          echo "✅ 当前 北京时间: $(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')"
          echo "========================"
      - name: Mark Start Time
        id: start
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download latest database backup (auto)
        env:
          BACKUP_PASSWORD: ${{ secrets.BACKUP_PASSWORD }}
        run: |
          mkdir -p data
          
          # Get latest release info
          LATEST_JSON=$(curl -s https://api.github.com/repos/suwei8/lotto_ai3_v2-Backup_data/releases/latest)

          # Parse URL
          DOWNLOAD_URL=$(echo $LATEST_JSON | jq -r '.assets[] | select(.name | endswith("_backup.zip")) | .browser_download_url')
          
          echo "✅ Latest backup URL: $DOWNLOAD_URL"
          wget -O data/lotto_backup.zip "$DOWNLOAD_URL"
          sleep 1
          unzip -P "$BACKUP_PASSWORD" -o data/lotto_backup.zip -d data/
          ls -lh data/

      - name: Decompress SQL if needed
        run: |
          gunzip -f data/*.sql.gz || echo "No gzip found, skip."

      - name: Restore DB to local
        env:
          MYSQL_PWD: ${{ secrets.MYSQL_PASSWORD }}
        run: |
          for f in data/*.sql; do
            echo "Restoring $f ..."
            mysql -h 127.0.0.1 -uroot ${{ secrets.MYSQL_DATABASE }} < "$f"
          done

      - name: Run init_expert_hit_stat.py
        env:
          MYSQL_HOST: 127.0.0.1
          MYSQL_PORT: 3306
          MYSQL_USER: root
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          LOTTERY: ${{ github.event_name == 'schedule' && '全部' || github.event.inputs.LOTTERY }}
          MODE: ${{ github.event_name == 'schedule' && 'Today' || github.event.inputs.MODE }}
          ISSUE: ${{ github.event.inputs.ISSUE || '' }}
        run: |
          echo "=========================="
          echo "🎯 触发类型: ${{ github.event_name }}"
          echo "🎯 最终 LOTTERY：$LOTTERY"
          echo "🎯 最终 MODE：$MODE"
          echo "🎯 最终 ISSUE：$ISSUE"
          echo "=========================="

          if [[ "$ISSUE" != "" ]]; then
            echo "👉 判断：期号模式执行"
            if [[ "$LOTTERY" == "全部" ]]; then
              echo "⚠️ 期号模式必须指定单个彩种，已选择全部，跳过"
              exit 1
            fi
            python scripts/init_expert_hit_stat.py "$LOTTERY" "$ISSUE"
          elif [[ "$MODE" != "不启用" ]]; then
            echo "👉 判断：MODE 执行"
            if [[ "$LOTTERY" == "全部" ]]; then
              python scripts/init_expert_hit_stat.py "$MODE"
            else
              python scripts/init_expert_hit_stat.py "$LOTTERY" "$MODE"
            fi
          else
            echo "⚠️ 没有要执行的操作，全部跳过"
          fi

      - name: Dump hit stat tables
        env:
          MYSQL_PWD: ${{ secrets.MYSQL_PASSWORD }}
        run: |
          mkdir -p output
          for table in expert_hit_stat_3d expert_hit_stat_p3 expert_hit_stat_p5 expert_hit_stat_klb expert_hit_stat_ssq expert_hit_stat_dlt; do
            echo "Dumping $table ..."
            mysqldump -h 127.0.0.1 -uroot ${{ secrets.MYSQL_DATABASE }} $table > output/$table.sql
          done

      # ✅ 上传备份到远程
      - name: Restore to remote MySQL
        env:
          REMOTE_MYSQL_HOST: ${{ secrets.REMOTE_MYSQL_HOST }}
          REMOTE_MYSQL_USER: ${{ secrets.REMOTE_MYSQL_USER }}
          REMOTE_MYSQL_PASSWORD: ${{ secrets.REMOTE_MYSQL_PASSWORD }}
          REMOTE_MYSQL_DATABASE: ${{ secrets.REMOTE_MYSQL_DATABASE }}
        run: |
          for f in output/*.sql; do
            echo "Importing $f to remote..."
            mysql -h $REMOTE_MYSQL_HOST -u$REMOTE_MYSQL_USER -p$REMOTE_MYSQL_PASSWORD $REMOTE_MYSQL_DATABASE < $f
          done

      - name: Mark End Time
        id: end
        run: echo "end_time=$(date +%s)" >> $GITHUB_ENV


      - name: Send WeChat Notify
        env:
          WECHAT_API_URL: ${{ secrets.WECHAT_API_URL }}
          WECHAT_API_KEY: ${{ secrets.WECHAT_API_KEY }}
          START: ${{ env.start_time }}
          END: ${{ env.end_time }}
          MODE: ${{ github.event.inputs.MODE }}
          LOTTERY: ${{ github.event.inputs.LOTTERY }}
          ISSUE: ${{ github.event.inputs.ISSUE }}
          GITHUB_EVENT: ${{ github.event_name }}
        run: |
          duration=$((END - START))
          mins=$((duration / 60))
          secs=$((duration % 60))

          # 期号优先取 ISSUE，没有就写 "-"
          ISSUE_VALUE=${ISSUE:-"-"}

          # 构造消息
          MESSAGE="✅ LottoAI3 命中汇总已完成！\n"
          MESSAGE+="Actions编号：#${{ github.run_number }}\n"
          MESSAGE+="期号：${ISSUE_VALUE}\n"
          MESSAGE+="🎯 触发类型: ${GITHUB_EVENT}\n"
          MESSAGE+="🎯 最终 LOTTERY：${LOTTERY}\n"
          MESSAGE+="🎯 最终 MODE：${MODE}\n"
          MESSAGE+="耗时：${mins}分${secs}秒"

          echo "✅ 即将发送的内容："
          echo "$MESSAGE"

          curl -X POST $WECHAT_API_URL \
          -H "Content-Type: application/json" \
          -H "x-api-key: $WECHAT_API_KEY" \
          -d "{\"content\": \"${MESSAGE}\"}"
